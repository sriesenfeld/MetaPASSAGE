example1_alt_README
S.J. Riesenfeld
Updated: Nov. 2010

--------
The example in this directory is designed to highlight a few of the
features of MetaPASSAGE. Many options are available that are not
shown in these examples. See the README and the pipeline source code
for more information.

---------
example1_alt_rpoB: 
 
This is an example of using the simulation pipeline MetaPASSAGE with
the rpoB family of protein sequences. This example does a similar
analysis to the one in the example1_AMPHORA_rpoB but without going
through AMPHORA. The sequence files and Genome tree file in the
example1_alt_rpoB directory are borrowed from AMPHORA, simply for use
as examples. Any protein family would work. The HMM for rpoB was built
using HMMER3 from the AMPHORA rpoB.aln file, first converted to
Stockholm format (using fasta2stockholm.pl in the util_scripts
subdirectory of MetaPASSAGE).

When MetaPASSAGE is used outside AMPHORA, it calls whichever HMMER
functions are in the user's path. Since the model included was built
with HMMER3 hmmbuild, the user should have HMMER 3 installed so the
alignment is properly done (or the user can substitute a different
rpoB model built using a different version of HMMER.)

This example suggests how the effect of limited prior knowledge about
the universe of sequences for a gene family may be studied by using
different reference databases. Moreover, it shows how a novel
sequencing error model can be incorporated easily in the simulation of
reads by MetaSim. It incorporates a filtering of the reads after they
are generated in order to retain only one per distinct full-length
sequence. Finally, it gives an idea of how the pipeline may be run in
batch.

See example1_alt_runsims.pl and example1_alt_refdb_create.pl for more
information.


---------
Directory: /examples/example1_alt_rpoB
Contains the following files:

- example1_alt_README

- example1_alt_refdb_create.pl : Perl script example for creating a
   reference database with a gene family, using a tree for which
   taxonomic information is available

- example1_alt_refdb_create.out : The output redirected from stdout from
   running example1_alt_refdb_create.pl, which illustrates the process
   of refDB creation in this instance.

***
- example1_alt_runsims.pl : The main Perl script for this example. It
   creates a few simulations from the rpoB protein family and
   demonstrates some of the capabilities of the pipeline. See the Perl
   script for more details.
***

- example1_alt_runsims.out : The output redirected from stdout from
   running example1_alt_runsims.pl, which illustrates the steps used in
   this instance of the pipeline.

- errormodel-80bp.mconf : MetaSim empirical model for 80-base-pair
  Illumina reads (downloaded from MetaSim website).

- rpoB.pep : Fasta file of rpoB protein sequences (file borrowed from
  AMPHORA)

- rpoB.fna : Fasta file of corresponding DNA sequences (a few from
  rpoB.pep are missing), retrieved from NCBI

- Genome.tree : Phylogenetic tree of AMPHORA taxa (file borrowed from
  AMPHORA)

- rpoB.hmm : Simple HMM model built from rpoB.pep using HMMER 3


---------
Directory: example1_alt_sample_output
Contains the following files, which are examples of output files
  created by running the scripts above.

Created by running the example1_alt_refdb_create.pl script:

- RefDB_rpoB_200.pep, RefDB_rpoB_200.fna : The first file is a fasta
   file containing a simulated "reference database" of 200 rpoB
   sequences, and the second file contains the corresponding DNA
   sequences; both are created by example1_alt_refdb_create.pl. A
   quarter of these sequences were chosen to maximize phylogenetic
   diversity according to the Genome tree. The result were selected
   uniformly at random from the rest of the rpoB sequences.

- RefDB_rpoB_20.pep, RefDB_rpoB_20.fna : Analogous to the above
   reference database, but with 20 instead of 200 sequences.

- Genome-maxPD.out : List of incremental contributions in phylogenetic
  diversity of each of the taxa represented in the AMPHORA tree
  Genome.tree.


Created by running the example1_alt_runsims.pl script. (Note: Original
   alignment files are each located in the appropriate simulation
   subdirectory but they have have been copied from the subdirectories
   to example1_alt_sample_output; the top-level directories have been
   tar'd and zipped to compress the size.)

- sim<X>_rpoB_RefDB_200-src-pd-reads-rp-thr-rpoB-sr-RefDB.aln (where
   <X>, which labels the simulation trial, is either 1 or 2) : These
   are the fasta alignments from both trials of the translated reads
   and the reference database sequences in RefDB_rpoB_200.pep. The
   reads in each trial are filtered so that at most one read is in the
   alignment for each corresponding full-length sequence. The long
   file name captures the main steps the pipeline took to create the
   file.

- sim<X>_rpoB_RefDB_20-src-pd-reads-rp-thr-rpoB-sr-RefDB.aln : The
   analogous files to those above using the reference database
   RefDB_rpoB_20.pep.

- sim<X>_rpoB_RefDB_200-src-final<Y>-RefDB.aln (where <X>, which labels
   the simulation trial, is either 1 or 2, and <Y> is some number
   close to 200 giving the number of distinct full-length sequences in
   the corresponding file) : Sequences in this file are either in the
   reference database or they are represented in the set of reads that
   corresponds to the same simulation trial. This is a fasta alignment
   of full-length gene sequences.

- sim<X>_rpoB_RefDB_20-src-final<Y>-RefDB.aln : The analogous files
   to those above, using the reference database RefDB_rpoB_20.pep


Output directories:

- sims_rpoB_RefDB_200.tgz : An actual simulation produces lots of files
   which may or may not interest the user. This tar'd and zip'd file
   contains contains all files produced for every simulation involving
   the reference database RefDB_rpoB_200. A description of what is
   contained in each of these files can be found in the MetaPASSAGE
   README.

- sims_rpoB_RefDB_20.tgz : The analogous file to that above, using the
   reference database RefDB_rpoB_20.pep.


Note: BLAST databases (e.g., RefDB_rpoB_200.phr, RefDB_rpoB_200.pin,
  RefDB_rpoB_200.psq) are not included in the sample output but will
  be created by running the script.
